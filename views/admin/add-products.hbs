<section>
  <div class="container">
    <div class="row">
      <div class="col mt-3">
        <h2 class="text-center">Add Products</h2>
        <form action="/admin/addproducts" method="post" enctype="multipart/form-data">
          <!-- Name Input -->
          <div class="mb-3">
            <label for="name" class="form-label">Name</label>
            <input type="text" id="name" name="name" class="form-control" required />
          </div>

          <!-- Category Select Box -->
          <div class="mb-3">
            <label for="category" class="form-label">Category</label>
            <select id="category" name="category" class="form-control" required onchange="checkCategory(this)">
              <option value="" disabled selected>Select a category</option>
              <option value="new">+ Add New Category</option>
            </select>
          </div>

          <!-- Price Input -->
          <div class="mb-3">
            <label for="price" class="form-label">Price</label>
            <input type="number" id="price" name="price" class="form-control" step="0.01" required />
          </div>

          <!-- Quantity Input -->
          <div class="mb-3">
            <label for="quantity" class="form-label">Quantity</label>
            <input type="number" id="quantity" name="quantity" class="form-control" required />
          </div>

          <!-- Description Input -->
          <div class="mb-3">
            <label for="description" class="form-label">Description</label>
            <textarea id="description" name="description" class="form-control" rows="4"></textarea>
          </div>

          <!-- File Upload Input -->
          <div class="mb-3">
            <label for="image" class="form-label">Upload Product Image</label>
            <input
              type="file"
              id="image"
              name="image"
              class="form-control"
              accept="image/*"
              onchange="previewImage(event)"
              required
            />
          </div>

          <!-- Image Preview -->
          <div class="mb-3">
            <label for="image-preview" class="form-label">Image Preview</label>
            <img
              id="image-preview"
              src=""
              alt="Image Preview"
              style="max-width: 300px; display: none;"
            />
          </div>

          <!-- Submit Button -->
          <button type="submit" class="btn btn-success mt-3">Submit</button>
        </form>
      </div>
    </div>
  </div>
</section>

<script>
  // Fetch categories from the database on page load
  document.addEventListener("DOMContentLoaded", async () => {
    try {
      const response = await fetch("/admin/getcategories");
      const data = await response.json();

      if (data.success) {
        const categorySelect = document.getElementById("category");

        // Remove old options except "Add New Category"
        categorySelect.innerHTML = `<option value="" disabled selected>Select a category</option>`;

        // Populate categories dynamically
        data.categories.forEach((category) => {
          const option = document.createElement("option");
          option.value = category.name;
          option.textContent = category.name;
          categorySelect.appendChild(option);
        });

        // Append "Add New Category" option at the end
        const addNewOption = document.createElement("option");
        addNewOption.value = "new";
        addNewOption.textContent = "+ Add New Category";
        categorySelect.appendChild(addNewOption);
      } else {
        console.error("Failed to fetch categories");
      }
    } catch (error) {
      console.error("Error loading categories:", error);
    }
  });

  // Handle adding new category
  async function checkCategory(select) {
    if (select.value === "new") {
      const newCategory = prompt("Enter new category name:");

      if (newCategory) {
        try {
          const response = await fetch("/admin/addcategory", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ category: newCategory }),
          });

          const data = await response.json();
          if (data.success) {
            const categorySelect = document.getElementById("category");

            // Add new category to the dropdown
            const newOption = document.createElement("option");
            newOption.value = newCategory;
            newOption.textContent = newCategory;
            categorySelect.insertBefore(newOption, categorySelect.lastElementChild);

            categorySelect.value = newCategory; // Select the newly added category
          } else {
            alert("Error: " + data.message);
          }
        } catch (error) {
          console.error("Error adding category:", error);
        }
      }

      select.value = ""; // Reset dropdown selection
    }
  }

  // Preview Image Before Uploading
  function previewImage(event) {
    const file = event.target.files[0];
    const preview = document.getElementById("image-preview");

    if (file && file.type.startsWith("image/")) {
      const reader = new FileReader();

      reader.onload = function (e) {
        preview.style.display = "block";
        preview.src = e.target.result;
      };

      reader.readAsDataURL(file);
    } else {
      preview.style.display = "none";
      preview.src = "";
      alert("Please select a valid image file.");
    }
  }
</script>

<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
